<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.core.dao.TbFunctionMapper" >
  <resultMap id="BaseResultMap" type="com.platform.core.po.TbFunction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="function_id" property="functionId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="function_url" property="functionUrl" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="function_type" property="functionType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, function_id, `name`, is_valid, creator, creator_name, create_time, modify_time, 
    function_url, parent_id, function_type
  </sql>
  <sql id="Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByVo" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbFunctionVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_function
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <select id="selectByVoAndPage" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbFunctionVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_function
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <delete id="deleteByVo" parameterType="com.platform.core.vo.TbFunctionVo" >
    delete from tb_function
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </delete>
  <select id="countByVo" parameterType="com.platform.core.vo.TbFunctionVo" resultType="java.lang.Integer" >
    select count(*) from tb_function
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </select>
  <update id="updateByVoSelective" parameterType="map" >
    update tb_function
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.functionId != null" >
        function_id = #{record.functionId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorName != null" >
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.functionUrl != null" >
        function_url = #{record.functionUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.functionType != null" >
        function_type = #{record.functionType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <update id="updateByVo" parameterType="map" >
    update tb_function
    set id = #{record.id,jdbcType=BIGINT},
      function_id = #{record.functionId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      function_url = #{record.functionUrl,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      function_type = #{record.functionType,jdbcType=VARCHAR}
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_function
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_function
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.platform.core.po.TbFunction" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_function (function_id, `name`, is_valid, 
      creator, creator_name, create_time, 
      modify_time, function_url, parent_id, 
      function_type)
    values (#{functionId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{isValid,jdbcType=INTEGER}, 
      #{creator,jdbcType=VARCHAR}, #{creatorName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{functionUrl,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{functionType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.core.po.TbFunction" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      function_id,
      `name`,
      is_valid,
      creator,
      creator_name,
      create_time,
      modify_time,
      function_url,
      parent_id,
      function_type,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{functionId,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{isValid,jdbcType=INTEGER},
      #{creator,jdbcType=VARCHAR},
      #{creatorName,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP},
      #{functionUrl,jdbcType=VARCHAR},
      #{parentId,jdbcType=VARCHAR},
      #{functionType,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.core.po.TbFunction" >
    update tb_function
    <set >
      <if test="functionId != null" >
        function_id = #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="functionUrl != null" >
        function_url = #{functionUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="functionType != null" >
        function_type = #{functionType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.core.po.TbFunction" >
    update tb_function
    set function_id = #{functionId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      function_url = #{functionUrl,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      function_type = #{functionType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>