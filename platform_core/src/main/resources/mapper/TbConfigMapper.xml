<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.core.dao.TbConfigMapper" >
  <resultMap id="BaseResultMap" type="com.platform.core.po.TbConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="config_name" property="configName" jdbcType="VARCHAR" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, config_name, `key`, `value`, `status`, message, create_time
  </sql>
  <sql id="Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByVo" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbConfigVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_config
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <select id="selectByVoAndPage" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbConfigVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_config
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <delete id="deleteByVo" parameterType="com.platform.core.vo.TbConfigVo" >
    delete from tb_config
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </delete>
  <select id="countByVo" parameterType="com.platform.core.vo.TbConfigVo" resultType="java.lang.Integer" >
    select count(*) from tb_config
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </select>
  <update id="updateByVoSelective" parameterType="map" >
    update tb_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configName != null" >
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.key != null" >
        `key` = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        `value` = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <update id="updateByVo" parameterType="map" >
    update tb_config
    set id = #{record.id,jdbcType=INTEGER},
      config_name = #{record.configName,jdbcType=VARCHAR},
      `key` = #{record.key,jdbcType=VARCHAR},
      `value` = #{record.value,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.platform.core.po.TbConfig" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_config (config_name, `key`, `value`, 
      `status`, message, create_time
      )
    values (#{configName,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platform.core.po.TbConfig" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      config_name,
      `key`,
      `value`,
      `status`,
      message,
      create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{configName,jdbcType=VARCHAR},
      #{key,jdbcType=VARCHAR},
      #{value,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER},
      #{message,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.core.po.TbConfig" >
    update tb_config
    <set >
      <if test="configName != null" >
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="key != null" >
        `key` = #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.core.po.TbConfig" >
    update tb_config
    set config_name = #{configName,jdbcType=VARCHAR},
      `key` = #{key,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>