<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.core.dao.TbVerifyCodeMapper" >
  <resultMap id="BaseResultMap" type="com.platform.core.po.TbVerifyCode" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="verify_code" property="verifyCode" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `type`, verify_code, create_time, update_time, email, `status`
  </sql>
  <sql id="Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByVo" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbVerifyCodeVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_verify_code
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <select id="selectByVoAndPage" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbVerifyCodeVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_verify_code
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <delete id="deleteByVo" parameterType="com.platform.core.vo.TbVerifyCodeVo" >
    delete from tb_verify_code
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </delete>
  <select id="countByVo" parameterType="com.platform.core.vo.TbVerifyCodeVo" resultType="java.lang.Integer" >
    select count(*) from tb_verify_code
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </select>
  <update id="updateByVoSelective" parameterType="map" >
    update tb_verify_code
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.verifyCode != null" >
        verify_code = #{record.verifyCode,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <update id="updateByVo" parameterType="map" >
    update tb_verify_code
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=INTEGER},
      verify_code = #{record.verifyCode,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_verify_code
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_verify_code
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.platform.core.po.TbVerifyCode" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_verify_code (`type`, verify_code, create_time, 
      update_time, email, `status`
      )
    values (#{type,jdbcType=INTEGER}, #{verifyCode,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platform.core.po.TbVerifyCode" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_verify_code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      `type`,
      verify_code,
      create_time,
      update_time,
      email,
      `status`,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{type,jdbcType=INTEGER},
      #{verifyCode,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{email,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.core.po.TbVerifyCode" >
    update tb_verify_code
    <set >
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="verifyCode != null" >
        verify_code = #{verifyCode,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.core.po.TbVerifyCode" >
    update tb_verify_code
    set `type` = #{type,jdbcType=INTEGER},
      verify_code = #{verifyCode,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>