<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.core.dao.TbRoleUserMapper" >
  <resultMap id="BaseResultMap" type="com.platform.core.po.TbRoleUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="is_invalid" property="isInvalid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, user_id, creator, creator_name, create_time, modify_time, is_invalid
  </sql>
  <sql id="Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Vo_Where_Clause" >
    <where >
      <foreach collection="vo.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByVo" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbRoleUserVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_role_user
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <select id="selectByVoAndPage" resultMap="BaseResultMap" parameterType="com.platform.core.vo.TbRoleUserVo" >
    select
    <if test="vo !=  null and vo.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_role_user
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
    <if test="vo !=  null and vo.orderByClause != null" >
      order by ${vo.orderByClause}
    </if>
  </select>
  <delete id="deleteByVo" parameterType="com.platform.core.vo.TbRoleUserVo" >
    delete from tb_role_user
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </delete>
  <select id="countByVo" parameterType="com.platform.core.vo.TbRoleUserVo" resultType="java.lang.Integer" >
    select count(*) from tb_role_user
    <if test="vo !=  null" >
      <include refid="Vo_Where_Clause" />
    </if>
  </select>
  <update id="updateByVoSelective" parameterType="map" >
    update tb_role_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorName != null" >
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isInvalid != null" >
        is_invalid = #{record.isInvalid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <update id="updateByVo" parameterType="map" >
    update tb_role_user
    set id = #{record.id,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      is_invalid = #{record.isInvalid,jdbcType=INTEGER}
    <if test="vo !=  null" >
      <include refid="Update_By_Vo_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_role_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_role_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.platform.core.po.TbRoleUser" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_role_user (role_id, user_id, creator, 
      creator_name, create_time, modify_time, 
      is_invalid)
    values (#{roleId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{creatorName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{isInvalid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.core.po.TbRoleUser" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_role_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      role_id,
      user_id,
      creator,
      creator_name,
      create_time,
      modify_time,
      is_invalid,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{roleId,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR},
      #{creator,jdbcType=VARCHAR},
      #{creatorName,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP},
      #{isInvalid,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.core.po.TbRoleUser" >
    update tb_role_user
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isInvalid != null" >
        is_invalid = #{isInvalid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.core.po.TbRoleUser" >
    update tb_role_user
    set role_id = #{roleId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_invalid = #{isInvalid,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>