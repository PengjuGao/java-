package com.platform.base.common.classTemplate;

import java.io.*;

public class FileUtils {


	/**
	 * 读取文件内容，并返回字符串
	 * @param filePath
	 * @return
	 */
	public static String getFileContent(String filePath,String charSet){

		StringBuffer buffer = new StringBuffer();

		Reader reader = null;

		try {
			reader = new BufferedReader(new InputStreamReader(new FileInputStream(filePath),charSet)); 

			char[] tempArr = new char[1024];;

			int num = 0;

			while((num = reader.read(tempArr)) != -1){

				buffer.append(tempArr,0,num);
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			
			if(null != reader){
				try {
					reader.close();
				} catch (IOException e) {
					System.err.println("-----------关闭输入流失败");
					e.printStackTrace();
				}
			}
			
		}

		return buffer.toString();
	}
	
	
	/**
	 * 生成文件
	 * @param filePath
	 * @param content
	 */
	public static void makeFile(String filePath,String content,String charSet,boolean flag){
		
		File tempFile = new File(filePath);
		
		if(tempFile.exists() && !flag){
			return;
		}

		Writer writer = null;
		
		//判断目录是否存在
		File parentFile = tempFile.getParentFile();
		
		if(!parentFile.exists()){
			
			parentFile.mkdirs();
			
		}
		
		
		if(tempFile.exists() && !flag){
			//什么也不做
		}else{
			try {
				//创建FILE
				tempFile.createNewFile();
				//写数据到file
				writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tempFile), charSet));

				writer.write(content.toCharArray());

			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				if(null !=  writer){
					try {
						writer.flush();
						writer.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		}
	}

	/**
	 * 生成文件目录
	 * @param path
	 * @param name
     * @return
     */
	public static String creatdir(String path, String name) {

		return path;
	}

	/**
	 * 生成文件
	 * @param path
	 * @param name
     * @return
     */
	public static String createFile(String path, String name) {

		return path;
	}
}
